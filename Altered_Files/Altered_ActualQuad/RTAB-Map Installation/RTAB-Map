Install DepthAI library from source
-----------------------To install from source:---------------------------
From this link: https://docs.luxonis.com/software/ros/depthai-ros/build/

1. After ROS2 humble installation, run:
```Shell
sudo wget -qO- https://docs.luxonis.com/install_dependencies.sh | bash
echo 'SUBSYSTEM=="usb", ATTRS{idVendor}=="03e7", MODE="0666"' | sudo tee /etc/udev/rules.d/80-movidius.rules
sudo udevadm control --reload-rules && sudo udevadm trigger
```

2. if you don't have rosdep installed and not initialized please execute the following steps:
```Shell
sudo apt install python3-rosdep
sudo rosdep init
rosdep update
```

3. 
The following setup procedure assumes you have cmake version >= 3.10.2 and OpenCV version >= 4.0.0. We selected dai_ws as the name for a new folder, as it will be our depthai ros workspace.

    only if git clone does not work: Download most uptodate repository from https://github.com/luxonis/depthai-ros/tree/humble

    mkdir -p dai_ws/src
    cd dai_ws/src
    ##git clone --branch humble https://github.com/luxonis/depthai-ros.git
    ##OR
    ##unzip cloned repo and move here
    cd ..
    rosdep install --from-paths src --ignore-src -r -y ##(might have to run multiple times, else run next 2 commands, and then run again)
    source /opt/ros/humble/setup.bash
    MAKEFLAGS="-j1 -l1" colcon build
    source install/setup.bash
    
NOTE: on vim4, I got following error running "rosdep install --from-paths src --ignore-src -r -y":
	E: Unable to fetch some archives, maybe run apt-get update or try with --fix-missing?
	ERROR: the following rosdeps failed to install
	  apt: command [sudo -H apt-get install -y ros-humble-image-transport-plugins] failed
	  apt: command [sudo -H apt-get install -y ros-humble-image-pipeline] failed
	  apt: command [sudo -H apt-get install -y ros-humble-diagnostic-updater] failed
	  apt: command [sudo -H apt-get install -y ros-humble-rviz-imu-plugin] failed
	  apt: command [sudo -H apt-get install -y ros-humble-depth-image-proc] failed
	  apt: Failed to detect successful installation of [ros-humble-image-transport-plugins]
	  apt: Failed to detect successful installation of [ros-humble-image-pipeline]
	  apt: Failed to detect successful installation of [ros-humble-diagnostic-updater]
	  apt: Failed to detect successful installation of [ros-humble-rviz-imu-plugin]
	  apt: Failed to detect successful installation of [ros-humble-depth-image-proc]
I than ran:
lsb_release -a
cat /etc/os-release
cat /etc/debian_version
uname -a

##Checked that date and time is correct:
date

sudo rm -rf /var/lib/apt/lists/*
sudo apt-get update

I then closed the terminal, opened it again, reran the command, and IT WORKED
No need to look at the following. I installed it on a raspberry pi 4b with 4gb ram. also implemented some swap memory (I did 10GB, but this is way too much. 4GB should be fine)
Note If you are using a lower end PC or RPi, standard building may take a lot of RAM and clog your PC. To avoid that, you can use build.sh command from your workspace (it just wraps colcon commands): ./src/depthai-ros/build.sh


4. Adding RTABMAP through DepthAI from here: https://docs.luxonis.com/software/ros/depthai-ros/driver/

sudo apt install ros-humble-rtabmap-ros
    you will probably get error message due to missing dependencies. Install these dependenccies using "sudo apt install yyy" and run above command again

Then launch RTAB-MAP using:
```Shell
ros2 launch depthai_ros_driver rtabmap.launch.py
```

4.5. Add following to .bashrc file:
```Shell
source /home/khadas/dai_ws/install/setup.bash
```


5. After doing changes to the rtabmap code in /home/dronepi/dai_ws/src/depthai-ros-humble/depthai_ros_driver/launch/rtabmap.launch.py , do the following:
    Also maybe add "--packages-select depthai_ros_driver"

```Shell
cd
cd dai_ws
MAKEFLAGS="-j1 -l1" colcon build --packages-select depthai_ros_driver
source install/setup.bash
```


99. LaunchRTAB-MAP using:
```Shell
ros2 launch depthai_ros_driver rtabmap.launch.py
```

100. if it does not work, try launching rtabmap and camera seperately, as follows(Note the changes to camera.launch.py file, else once you subscribe to the rectified image topic, the camera node crashes). Maybe this has something to do with running in/from container? also, rtabmap.launch.py file 'approx_sync:=true' causes problems:
'''
Copy files from "RTAB-Map Istallation" into directory specified in ReadMe file
'''

```Shell
ros2 launch depthai_ros_driver camera.launch.py
```

```Shell
ros2 launch rtabmap_launch rtabmap.launch.py  args:="--delete_db_on_start"  depth_topic:=/oak/stereo/image_raw  rgb_topic:=/oak/rgb/image_raw  camera_info_topic:=/oak/rgb/camera_info  frame_id:=oak-d-base-frame  use_sim_time:=true approx_sync:=true  qos:=2  queue_size:=30
```

101. Also create custom launch file for camera and rtabmap.Copy the "rtabmap_custom" folder from "RTAB-Map Installation" folder into ros2_ws/src, colcon build and launch using:
```Shell
ros2 launch rtabmap_custom rtabmap_custom.launch.py
```







